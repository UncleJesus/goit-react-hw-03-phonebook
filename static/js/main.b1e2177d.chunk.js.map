{"version":3,"sources":["components/Section/Section.module.css","components/ContactForm/ContactForm.module.css","components/Section/Section.js","components/ContactForm/ContactForm .js","components/ContactList/ContactListItem/ContactListItem.js","components/ContactList/ContactList .js","components/Filter/Filter.js","components/App.js","index.js","components/ContactList/ContactListItem/ContactListItem.module.css"],"names":["module","exports","Section","title","children","className","styles","section","ContactForm","state","name","number","changeHandler","e","target","value","setState","submitHandler","preventDefault","contact","id","uuidv4","props","addContact","reset","this","onSubmit","contactForm","htmlFor","type","placeholder","onChange","disabled","length","Component","ContactListItem","onDelete","contactLi","contactLiP","onClick","contactLiBtn","ContactList","contacts","map","style","display","Filter","App","filter","deleteContactbyId","updatedContacts","newName","toLowerCase","includes","trim","alert","filterContactsByName","persistedTasks","localStorage","getItem","JSON","parse","prevProps","prevState","setItem","stringify","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b1e2177d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__2eEG_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactForm\":\"ContactForm_contactForm__1AUvP\"};","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./Section.module.css\";\n\nconst Section = ({ title, children }) => {\n  return (\n    <section className={styles.section}>\n      <h2>{title}</h2>\n      {children}\n    </section>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nexport default Section;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./ContactForm.module.css\";\n\nimport { v4 as uuidv4 } from \"uuid\";\n\nclass ContactForm extends Component {\n  state = {\n    name: \"\",\n    number: \"\",\n  };\n\n  changeHandler = (e) => {\n    const { name, value } = e.target;\n\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  submitHandler = (e) => {\n    e.preventDefault();\n    const { name, number } = this.state;\n    const contact = {\n      id: uuidv4(),\n      name: name,\n      number: number,\n    };\n    this.props.addContact(contact);\n\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({\n      name: \"\",\n      number: \"\",\n    });\n  };\n\n  render() {\n    const { name, number } = this.state;\n    return (\n      <form onSubmit={this.submitHandler} className={styles.contactForm}>\n        <label htmlFor=\"nameInput\">\n          Name:\n          <input\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            placeholder=\"enter name...\"\n            onChange={this.changeHandler}\n            id=\"nameInput\"\n          />\n        </label>\n\n        <label htmlFor=\"numberInput\">\n          Number:\n          <input\n            type=\"tel\"\n            name=\"number\"\n            value={number}\n            placeholder=\"enter number...\"\n            onChange={this.changeHandler}\n            id=\"numberInput\"\n          />\n        </label>\n        <button type=\"submit\" disabled={!name.length || !number.length}>\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nContactForm.propTypes = {\n  addContact: PropTypes.func.isRequired,\n};\nexport default ContactForm;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./ContactListItem.module.css\";\n\nconst ContactListItem = ({ name, number, onDelete }) => {\n  return (\n    <li className={styles.contactLi}>\n      <p className={styles.contactLiP}>\n        {name}: {number}\n      </p>\n      <button type=\"button\" onClick={onDelete} className={styles.contactLiBtn}>\n        delete\n      </button>\n    </li>\n  );\n};\n\nContactListItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  onDelete: PropTypes.func.isRequired,\n};\n\nexport default ContactListItem;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport ContactListItem from \"./ContactListItem/ContactListItem\";\n\nconst ContactList = ({ contacts, onDelete }) => {\n  return (\n    <ul>\n      {contacts.length > 0 ? (\n        contacts.map(({ id, name, number }) => (\n          <ContactListItem\n            key={id}\n            name={name}\n            number={number}\n            onDelete={() => onDelete(id)}\n          />\n        ))\n      ) : (\n        <p>no contact with such name in your phone </p>\n      )}\n    </ul>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.oneOfType([\n    PropTypes.arrayOf(\n      PropTypes.exact({\n        id: PropTypes.string.isRequired,\n        name: PropTypes.string.isRequired,\n        number: PropTypes.string.isRequired,\n      })\n    ),\n    PropTypes.array,\n  ]),\n  onDelete: PropTypes.func.isRequired,\n};\nexport default ContactList;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst style = {\n  display: \"block\",\n};\n\nconst Filter = ({ onChange }) => {\n  return (\n    <label htmlFor=\"filterInput\">\n      Find contacts by name\n      <input\n        type=\"text\"\n        onChange={onChange}\n        name=\"filter\"\n        style={style}\n        id=\"filterInput\"\n      />\n    </label>\n  );\n};\n\nFilter.propTypes = {\n  onChange: PropTypes.func.isRequired,\n};\nexport default Filter;\n","import React, { Component } from \"react\";\nimport Section from \"./Section/Section\";\nimport ContactForm from \"./ContactForm/ContactForm \";\nimport ContactList from \"./ContactList/ContactList \";\nimport Filter from \"./Filter/Filter\";\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    ],\n    filter: \"\",\n  };\n\n  componentDidMount() {\n    const persistedTasks = localStorage.getItem(\"conctacts\");\n    if (persistedTasks) {\n      this.setState({ contacts: JSON.parse(persistedTasks) });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.contacts !== this.state.contacts) {\n      localStorage.setItem(\"conctacts\", JSON.stringify(this.state.contacts));\n    }\n  }\n\n  changeHandler = (e) => {\n    const { name, value } = e.target;\n\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  deleteContactbyId = (id) => {\n    const { contacts } = this.state;\n    const updatedContacts = contacts.filter((contact) => contact.id !== id);\n    this.setState({\n      contacts: [...updatedContacts],\n    });\n  };\n\n  addContact = (contact) => {\n    const newName = contact.name;\n    const names = this.state.contacts.map((contact) =>\n      contact.name.toLowerCase()\n    );\n    if (names.includes(newName.toLowerCase().trim())) {\n      return alert(\"You already added this contact\");\n    } else {\n      this.setState((state) => ({\n        contacts: [...state.contacts, contact],\n      }));\n    }\n  };\n\n  filterContactsByName = () => {\n    const { contacts, filter } = this.state;\n    if (contacts.length > 0) {\n      return contacts.filter((contact) =>\n        contact.name.toLowerCase().includes(filter.toLowerCase())\n      );\n    }\n  };\n\n  render() {\n    const { contacts } = this.state;\n    return (\n      <>\n        <Section title=\"Phonebook\">\n          <ContactForm addContact={this.addContact} />\n        </Section>\n        <Section title=\"Contacts\">\n          {contacts.length > 1 && <Filter onChange={this.changeHandler} />}\n          <ContactList\n            contacts={this.filterContactsByName()}\n            onDelete={this.deleteContactbyId}\n          />\n        </Section>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactLi\":\"ContactListItem_contactLi__iyUud\",\"contactLiP\":\"ContactListItem_contactLiP__renuQ\",\"contactLiBtn\":\"ContactListItem_contactLiBtn__2dSR_\"};"],"sourceRoot":""}